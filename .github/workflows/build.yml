name: Revue CI

on:
  push:
    branches: [ '**', '!main' ]
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - macos-12
          - windows-2022
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build
        run: ./gradlew build --info
      - name: Test
        run: ./gradlew auth:test user:test alarm:test device:test log:test notification:test location:test --info

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Check format
        run: ./gradlew format --info
      - name: Check lint
        run: ./gradlew lint --info

  compute-next-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'
      - name: Pre-compute the next version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@2.0.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
      - name: Use the next version
        run: |
          echo "Will release: ${{ steps.compute-next-version.outputs.will-release }}"
          echo "The next version is ${{ steps.compute-next-version.outputs.next-version }}"
  release:
    needs:
      - build
      - style
      - test
    runs-on: ubuntu-latest
    concurrency:
      # Only one release job at a time per branch, strictly sequential.
      group: release-${{ github.event.number || github.ref }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
  docker:
    name: Push ${{ matrix.image }} image to docker hub
    needs:
      - compute-next-version
      - release
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      ) && fromJSON(needs.compute-next-version.outputs.will-release)
    strategy:
      matrix:
        image:
          - alarm
          - auth
          - device
          - frontend
          - location
          - log
          - monitoring
          - notification
          - recognition
          - user
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6.3.0
        with:
          context: ${{ matrix.image }}
          platform: linux/amd64,linux/arm64
          file: ./Dockerfile
          push: true
          tags: |
            letsdothisshared/revue-${{ matrix.image }}:${{ needs.compute-next-version.outputs.next-version }}
            letsdothisshared/revue-${{ matrix.image }}:latest
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - style
      - test
      - release
      - docker
      - compute-next-version
    steps:
        - name: None of the dependant jobs should fail
          run: ${{ !contains(needs.*.result, 'failure') }}
