@startuml

!startsub SecurityRuleRoot
interface SecurityRuleService {
    +getSecurityRuleById(id: string): Promise<SecurityRule>
    +getExceedingRules(): Promise<ExceedingRule[]>
    +getIntrusionRules(): Promise<IntrusionRule[]>
    +getContactsToNotify(anomaly: Anomaly): Promise<Contact[]>
    +insertExceedingSecurityRule(exceedingRule: ExceedingRule): void
    +insertIntrusionSecurityRule(intrusionRule: IntrusionRule): void
    +updateExceedingSecurityRule(exceedingRule: ExceedingRule): void
    +updateIntrusionSecurityRule(intrusionRule: IntrusionRule): void
    +deleteExceedingRule(id: string): void
    +deleteIntrusionRule(id: string): void
    +checkExceedingDetection(environmentData: EnvironmentData): Promise<boolean>
    +checkIntrusionDetection(cameraId: DeviceId, objectClass: ObjectClass, timestamp: Date): Promise<boolean>
}
!endsub SecurityRuleRoot
SecurityRuleService --> SecurityRuleRepository : uses
SecurityRuleService --> SecurityRuleFactory : uses

interface SecurityRuleRepository {
    +getExceedingRules(): Promise<ExceedingRule[]>
    +getIntrusionRules(): Promise<IntrusionRule[]>
    +getSecurityRuleById(securityRuleId: string): Promise<SecurityRule>
    +insertExceedingSecurityRule(exceedingRule: ExceedingRule): Promise<string>
    +insertIntrusionSecurityRule(intrusionRule: IntrusionRule): Promise<string>
    +updateExceedingSecurityRule(exceedingRule: ExceedingRule): Promise<void>
    +updateIntrusionSecurityRule(intrusionRule: IntrusionRule): Promise<void>
    +deleteExceedingRule(exceedingRuleId: string): Promise<void>
    +deleteIntrusionRule(intrusionRuleId: string): Promise<void>
}
SecurityRuleRepository o-- SecurityRule


interface SecurityRule {
  + securityRuleId: Int
  + deviceId: DeviceId
  + getCreatorId(): Int
  + contactsToNotify: Set<Contact>
  + description: String
  + from: Timestamp
  + to: Timestamp
}

interface SecurityRuleFactory {
  + createIntrusionRule(...): IntrusionRule
  + createExceedingRule(...): ExceedingRule
}
SecurityRuleFactory -left-> SecurityRule : creates

interface IntrusionRule {
  + objectClass: ObjectClass
}
IntrusionRule o-- ObjectClass

interface ExceedingRule {
  + min: Float
  + max: Float
  + measure: Measure
}

enum ObjectClass {
  PERSON
  BICYCLE
  CAR
  ...
}



SecurityRule --* ExceedingRule
SecurityRule --* IntrusionRule


@enduml
