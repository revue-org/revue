services:

  revue-monitoring:
    image: letsdothisshared/revue-monitoring
    container_name: ${MONITORING_HOST}
    build:
      context: .
      dockerfile: ./monitoring/Dockerfile
    restart: on-failure
    ports:
      - ${MONITORING_PORT}:${MONITORING_PORT}
    depends_on:
      - revue-monitoring-db
      - ${KAFKA_HOST}
    networks:
      - my-net
    labels:
      kompose.service.type: nodeport
      kompose.controller.type: deployment
      # kompose.image-pull-policy: IfNotPresent

  revue-monitoring-db:
    image: mongo
    container_name: ${MONITORING_DB_HOST}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONITORING_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONITORING_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONITORING_DB_NAME}
    ports:
      - ${MONITORING_DB_PORT}:27017
    volumes:
      - monitoring_data:/data/db
      - ./monitoring/db/device-init.js:/docker-entrypoint-initdb.d/device-init.js
    networks:
      - my-net
    labels:
      kompose.service.type: clusterip
      kompose.controller.type: deployment
      kompose.image-pull-policy: IfNotPresent

volumes:
  monitoring_data:
    driver: local

networks:
  my-net:
    name: revue-network
    external: true
