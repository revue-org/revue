services:

  revue-notification:
    image: letsdothisshared/revue-notification
    container_name: ${NOTIFICATION_HOST}
    build:
      context: .
      dockerfile: ./notification/Dockerfile
    restart: on-failure
    ports:
      - ${NOTIFICATION_PORT}:${NOTIFICATION_PORT}
    depends_on:
      - revue-notification-db
      - ${KAFKA_HOST}
    networks:
      - my-net
    labels:
      kompose.service.expose: "notification.localhost"
      traefik.enable: true
      traefik.http.routers.notification.rule: Host(`notification.localhost`)
      traefik.http.routers.notification.entrypoints: websecure
      traefik.http.routers.notification.tls.certresolver: myresolver

  revue-notification-db:
    image: mongo
    container_name: ${NOTIFICATION_DB_HOST}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${NOTIFICATION_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${NOTIFICATION_DB_NAME}
    ports:
      - ${NOTIFICATION_DB_PORT}:27017
    volumes:
      - revue_notification_data:/data/db
      - ./notification/db/notification-init.js:/docker-entrypoint-initdb.d/notification-init.js
    networks:
      - my-net
    labels:
      kompose.service.type: clusterip
      kompose.controller.type: deployment

volumes:
  revue_notification_data:
    driver: local

networks:
  my-net:
    name: revue-network
    external: true
